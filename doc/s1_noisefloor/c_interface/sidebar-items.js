initSidebarItems({"fn":[["linear_get_customscale_data","Applies the linear scaling method using custom user provided scales, k. Returns the values back in square intensity units."],["linear_get_dualpol_data","Applies the lstsquares estimation method to retrieve scaling parameters, k, rescales the noise floor, y, and subtracts it from the image, x. Returns the values back in square intensity units. Parameters:"],["linear_get_raw_data","Returns the original cross pol, co pol, and noise field from the archive. Note that arrays are in linear units."],["lp_get_customscale_data","Applies the power function noise floor obtained from linear programming,   with parameters given by the user. Returns the values back in square intensity units."],["lp_get_dualpol_data","Applies the linear programming method to restimate a noise floor based on the characteristics of the original image and the  Returns the values back in square intensity units."],["post_multilook_and_floor","Applies multilooking to the input image, sets negative values to 0, and square roots the output values."]],"struct":[["LPResult","Struct for holding results from Linear results crosspol: pointer to crosspol in f64 (square) copol: pointer to u16 k: pointer to noise field. m: pointer to slope params b: pointer to intercept params rows: # rows in image cols: # cols in image n_subswaths: number of subswaths in image. plen: number of elements in m."],["LinearResult","Struct for holding results from Linear results crosspol: pointer to crosspol in f64 (square) copol: pointer to u16 k: pointer to linear scales rows: # rows in image cols: # cols in image"],["RawResult","struct for holding raw results. crosspol: pointer to crosspol in f64 (square) copol: pointer to u16 y: pointer to noise field. rows: # rows in image cols: # cols in image"],["SimpleArray2D","Simple array structure for multilook processing Assumes Row major order, contiguous. data: pointer to data rows: number of rows in image cols: number of columns in image"]]});